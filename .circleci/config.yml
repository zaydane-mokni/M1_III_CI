 version: 2.1
 jobs:
  build:
      docker:
        - image: circleci/node:dubnium-browsers
      working_directory: ~/repo
      steps:
        - checkout
        - restore_cache:
            keys:
              - dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
              # fallback to using the latest cache if no exact match is found
              - dependencies-
        - run: yarn global add node-gyp && yarn install
        - save_cache:
            paths:
              - node_modules
            key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}

  lint:
    docker:
      - image: circleci/node:10-buster
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
              # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run: yarn lint && yarn format:check

  test:
   docker:
      - image: circleci/node:dubnium
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: psqluser
          POSTGRES_DB: psqlpassword
          POSTGRES_PASSWORD: psdb
   steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
            - dependencies-
      - run:
          command: yarn test:e2e
          environment:
            DATABASE_URL: postgres://psqluser:psqlpassword@localhost:5432/psdb
            JWT_SECRET: 'Test'
            API_PORT: '3000'
            API_HOST: localhost
            API_PROTOCOL: http

  build_docker_file_and_pushIt:
        machine: true
        steps:
           - checkout
           # start proprietary DB using private Docker image
           # with credentials stored in the UI
           - run: |
               echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
           - run: docker tag  app $DOCKER_LOGIN/my-awesome-ci-expr:latest
           # build the application image
           - run: docker build -t zaydane/master_iii_tp_ci/app:$CIRCLE_BUILD_NUM .
           # deploy the image
           - run: docker push zaydane/master_iii_tp_ci/app:$CIRCLE_BUILD_NUM
  doc_build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
            - dependencies-
      - run:
          name: yarn Doc
          command: yarn doc:build
      - store_artifacts:
          path: doc-server

 workflows:
   build_and_test:
     jobs:
      - build
      - lint:
         requires:
          - build
      - test:
         requires:
          - build
      - build_docker_file_and_pushIt:
            requires:
              - lint
              - test
            filters:
              branches:
                only: master
      - doc_build:
            requires:
              - lint
              - test
